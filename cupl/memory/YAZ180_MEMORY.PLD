Name     YAZ180_Memory ;
PartNo   00 ;
Date     4/2/2018 ;
Revision 05 ;
Designer Phillip Stevens ;
Company  Emotiv8 ;
Assembly None ;
Location Melbourne Australia ;
Device   G16V8MA ;

/* *************** INPUT PINS *********************/

PIN   1     =  !PROGRAM            ; /* Program pin, ACTIVE LOW */
PIN   2     =  !MREQ               ; /* Memory Request, ACTIVE LOW */
PIN  [3..9] =  [A19..13]           ; /* Most significant digits of address bus to define mapping  */
PIN  11     =  !IORQ               ; /* IO Request, ACTIVE LOW */

/* *************** OUTPUT PINS *********************/

PIN  19  =  !APU_CS                ; /* Chip Select for APU, ACTIVE LOW            */
PIN  18  =  !RAM_CS                ; /* Chip Select for SRAM, ACTIVE LOW           */ 
PIN  17  =  !FLASH_CS              ; /* Chip Select for Flash, ACTIVE LOW          */ 
PIN  16  =  !USB_CS                ; /* Chip Select for USB, ACTIVE LOW - Combine with !WR and !RD as needed. */
PIN  15  =  !I2C_CS2               ; /* Chip Select for I2C Interface #2, ACTIVE LOW */
PIN  14  =  !I2C_CS1               ; /* Chip Select for I2C Interface #1, ACTIVE LOW */
PIN  13  =  !DIO_CS                ; /* Chip Select or Digital IO, ACTIVE LOW */
PIN  12  =   BREAK                 ; /* Program Break Point, Initiate Single Step, ACTIVE HIGH */

/* *************** DECLARATIONS ********************/

FIELD MEM_ADDRESS = [A19..13]      ; /* Most significant bits of memory address bus */

FIELD IO_ADDRESS =  [A15..13]      ; /* Most significant bits of IO (memory) address bus */

/* *************** MEMORY LOGIC *********************/

CONDITION {
	IF (            MREQ & !IORQ & MEM_ADDRESS:[0C000..0FFFF] )      OUT RAM_CS ;  /* BANK_0 12kB and COMMON1 4kB (COMMON1 base address is flexible) */
/*	IF (            MREQ & !IORQ & MEM_ADDRESS:[10000..DFFFF] )      OUT RAM_CS ;  /* BANK_1 through BANK13 SRAM */
/*	IF ( !PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[E0000..EFFFF] )      OUT RAM_CS ;  /* BANK14 SRAM in Run State (not Programme State) */
	IF (            MREQ & !IORQ & MEM_ADDRESS:[10000..BFFFF] )      OUT RAM_CS ;  /* BANK_1 through BANK11 SRAM */
	IF ( !PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[C0000..CFFFF] )      OUT RAM_CS ;  /* BANK12 SRAM in Run State (not Programme State) */
/*	IF (            MREQ & !IORQ & MEM_ADDRESS:[10000..7FFFF] )      OUT RAM_CS ;  /* BANK_1 through BANK_7 SRAM */
/*	IF ( !PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[80000..8FFFF] )      OUT RAM_CS ;  /* BANK08 SRAM in Run State (not Programme State) */
	}

CONDITION {
	IF ( !PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[00000..0BFFF] )      OUT FLASH_CS ; /* BANK_0 YABIOS and system libraries */
/*	IF (  PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[E0000..EFFFF] )      OUT FLASH_CS ; /* In Programming State, force BANK_0 to appear as BANK14 - SST39SF010A 128kB */
/*	IF (            MREQ & !IORQ & MEM_ADDRESS:[F0000..FFFFF] )      OUT FLASH_CS ; /* BANK15 (Snapshot storage) SST39SF010A 128kB*/
	IF (  PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[C0000..CFFFF] )      OUT FLASH_CS ; /* In Programming State, force BANK_0 to appear as BANK12 - SST39SF020A 256kB */
	IF (            MREQ & !IORQ & MEM_ADDRESS:[D0000..FFFFF] )      OUT FLASH_CS ; /* BANK13, BANK14, BANK15 (Snapshot storage) - SST39SF020A 256kB */
/*	IF (  PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[80000..8FFFF] )      OUT FLASH_CS ; /* In Programming State, force BANK_0 to appear as BANK_8 - SST39SF040A 512kB */
/*	IF (            MREQ & !IORQ & MEM_ADDRESS:[90000..FFFFF] )      OUT FLASH_CS ; /* BANK_9, BANK10,... BANK15 (Snapshot storage) - SST39SF040A 512kB */
	}

CONDITION {
	IF (  PROGRAM & MREQ & !IORQ & MEM_ADDRESS:[00000..0BFFF] )      OUT USB_CS ;   /* PROGRAM state, 48kB of ADDRESS space uses USB fake memory */
	}

/* *************** IO LOGIC *********************/

CONDITION {
	IF ( IORQ & !MREQ & IO_ADDRESS:[2000..3FFF] )                    OUT BREAK ;    /* Initiate the Single Step mode following a BREAK request. */
	IF ( IORQ & !MREQ & IO_ADDRESS:[8000..9FFF] )                    OUT I2C_CS2 ;  /* Select the I2C Device #2. */
	IF ( IORQ & !MREQ & IO_ADDRESS:[A000..BFFF] )                    OUT I2C_CS1 ;  /* Select the I2C Device #1. */
	}

CONDITION {
	IF ( IORQ & !MREQ & IO_ADDRESS:[4000..5FFF] )                    OUT DIO_CS ;   /* Latch the digital IO, together with !WR or !RD. */
	IF (        !MREQ & IO_ADDRESS:[C000..DFFF] )                    OUT APU_CS ;   /* Select the Arithmetic Processing Unit. */
	}
